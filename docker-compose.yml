services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 60s


  web:
    build: .
    container_name: w_router_web
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - app-network
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - FIELD_ENCRYPTION_KEY=${FIELD_ENCRYPTION_KEY}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}
      - WHATSAPP_VERIFY_TOKEN=${WHATSAPP_VERIFY_TOKEN}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "dozzle.name=WhatsApp Router"
      - "dozzle.group=wa_router"

  dozzle:
    container_name: wa_router_dozzle
    image: amir20/dozzle:latest
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./dozzle:/data
    secrets:
      - users
    networks:
      - app-network
    environment:
      DOZZLE_AUTH_PROVIDER: "simple"
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_NO_ANALYTICS: "true"
    restart: unless-stopped
    labels:
      - "dozzle.ignore=true"
  
secrets:
  users:
    file: ./dozzle/users.yml


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: